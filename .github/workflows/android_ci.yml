name: Android CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  # Lập lịch để chạy hàng đêm vào lúc 2 giờ sáng UTC
  schedule:
    - cron: '0 2 * * *'
  # Cho phép chạy thủ công từ giao diện GitHub
  workflow_dispatch:

jobs:
  build:
    name: Build và Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Thiết lập JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: gradle

      - name: Cấp quyền thực thi cho Gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Kiểm tra với Lint
        run: ./gradlew lint

      - name: Chạy Unit Tests
        run: ./gradlew test

      - name: Build Debug APK
        run: ./gradlew assembleDevDebug

      - name: Upload APK Debug
        uses: actions/upload-artifact@v3
        with:
          name: app-dev-debug
          path: app/build/outputs/apk/dev/debug/app-dev-debug.apk

  release:
    name: Tạo Release
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Thiết lập JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: gradle

      - name: Cấp quyền thực thi cho Gradlew
        run: chmod +x ./gradlew

      - name: Thiết lập Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        run: echo "$KEYSTORE_BASE64" | base64 -d > app/release.keystore

      - name: Build Release APK và Bundle
        env:
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          ./gradlew assembleProdRelease
          ./gradlew bundleProdRelease

      - name: Đọc version từ build.gradle
        id: gradle_version
        run: |
          VERSION_CODE=$(grep -o 'versionCode\s*=\s*[0-9]*' app/build.gradle.kts | grep -o '[0-9]*')
          VERSION_NAME=$(grep -o 'versionName\s*=\s*"[^"]*"' app/build.gradle.kts | grep -o '"[^"]*"' | sed 's/"//g')
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "::set-output name=version_code::$VERSION_CODE"
          echo "::set-output name=version_name::$VERSION_NAME"

      - name: Tạo Release Tag
        id: create_tag
        run: |
          TAG_NAME="v${{ env.VERSION_NAME }}-${{ env.VERSION_CODE }}"
          git tag $TAG_NAME
          git push origin $TAG_NAME
          echo "::set-output name=tag_name::$TAG_NAME"

      - name: Tạo Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.create_tag.outputs.tag_name }}
          name: Release ${{ env.VERSION_NAME }} (Build ${{ env.VERSION_CODE }})
          body: |
            ## Phiên bản mới ${{ env.VERSION_NAME }} (Build ${{ env.VERSION_CODE }})
            
            ### Thay đổi trong phiên bản này:
            - Cập nhật tính năng và sửa lỗi
            
            ### APK và Bundle:
            - APK: app-prod-release.apk
            - Bundle: app-prod-release.aab
            
            *Được tạo tự động bởi CI/CD Pipeline.*
          draft: false
          prerelease: false
          files: |
            app/build/outputs/apk/prod/release/app-prod-release.apk
            app/build/outputs/bundle/prodRelease/app-prod-release.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy lên Firebase App Distribution
    needs: release
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Thiết lập JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: gradle

      - name: Cấp quyền thực thi cho Gradlew
        run: chmod +x ./gradlew

      - name: Thiết lập Firebase CLI
        run: npm install -g firebase-tools

      - name: Build APK QA để phân phối
        run: ./gradlew assembleQaDebug

      - name: Phân phối cho testers qua Firebase App Distribution
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          firebase appdistribution:distribute app/build/outputs/apk/qa/debug/app-qa-debug.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --groups "testers" \
            --release-notes "Build tự động từ CI/CD. Phiên bản QA để kiểm tra."
